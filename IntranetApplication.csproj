<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptToolsVersion>2.8</TypeScriptToolsVersion>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="bin\**" />
    <Compile Remove="Contracts\**" />
    <Compile Remove="Database\**" />
    <Compile Remove="wwwroot\css\**" />
    <Content Remove="bin\**" />
    <Content Remove="Contracts\**" />
    <Content Remove="Database\**" />
    <Content Remove="wwwroot\css\**" />
    <EmbeddedResource Remove="bin\**" />
    <EmbeddedResource Remove="Contracts\**" />
    <EmbeddedResource Remove="Database\**" />
    <EmbeddedResource Remove="wwwroot\css\**" />
    <None Remove="bin\**" />
    <None Remove="Contracts\**" />
    <None Remove="Database\**" />
    <None Remove="wwwroot\css\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="HangFire" Version="1.6.19" />
    <PackageReference Include="Hangfire.Core" Version="1.6.19" />
    <PackageReference Include="Hangfire.MemoryStorage" Version="1.5.2" />
    <PackageReference Include="Hangfire.SqlServer" Version="1.6.19" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.8" />
    <PackageReference Include="Microsoft.AspNetCore.Http" Version="2.1.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.0.3" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.0.3" />
    <PackageReference Include="Node.js" Version="5.3.0" />
    <PackageReference Include="Npm" Version="3.5.2" />
    <PackageReference Include="React.AspNet" Version="3.3.0" />
    <PackageReference Include="React.Router" Version="3.3.0" />
    <PackageReference Include="Selenium.Chrome.WebDriver" Version="2.38.0" />
    <PackageReference Include="Selenium.Support" Version="3.12.1" />
    <PackageReference Include="Selenium.WebDriver" Version="3.12.1" />
    <PackageReference Include="Selenium.WebDriver.ChromeDriver" Version="2.39.0" />
    <PackageReference Include="Serilog" Version="2.7.1" />
    <PackageReference Include="Serilog.AspNetCore" Version="2.1.1" />
    <PackageReference Include="System.Drawing.Common" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.4" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System.Drawing">
      <HintPath>..\..\..\..\..\..\..\..\..\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Drawing.dll</HintPath>
    </Reference>
    <Reference Include="WebDriver">
      <HintPath>..\packages\Selenium.WebDriver.3.12.0\lib\net45\WebDriver.dll</HintPath>
    </Reference>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\dist\" />
    <Folder Include="wwwroot\images\ScrappedImages\" />
    <Folder Include="wwwroot\images\UploadedImages\" />
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Exec Command="node node_modules/webpack/bin/webpack.js" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Error running webpack." />
  </Target>

  <Target Name="DebugBuildWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And Exists('wwwroot\dist') ">

    <!-- In development, rebuilding the bundle.js file. -->
    <Message Importance="high" Text="Building Webpack..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.js" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Exec Command="node node_modules/webpack/bin/webpack.js" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Error running webpack." />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.js --env.prod" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Error running webpack." />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
